<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>Atea.Windows.File.Monitoring</ID>
      <Version>1.0.3.241</Version>
    </Identity>
    <Name>Atea.Windows.File.Monitoring</Name>
    <References>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Atea.Windows.File.FileAgeFolder" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false">
          <Property ID="FolderPath" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="Recursive" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="FilePattern" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="AgeInMinutes" Type="int" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="Operator" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="FriendlyName" Type="string" Key="true" CaseSensitive="false" MinLength="0" />
          <Property ID="FileAgeAttribute" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
        </ClassType>
        <ClassType ID="Atea.Windows.File.FileCreationTimeFolder" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false">
          <Property ID="FolderPath" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="Recursive" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="FilePattern" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="AgeInMinutes" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="Operator" Type="string" Key="false" CaseSensitive="false" MinLength="0" />
          <Property ID="FriendlyName" Type="string" Key="true" CaseSensitive="false" MinLength="0" />
        </ClassType>
        <ClassType ID="Atea.Windows.File.Monitoring.Seed" Accessibility="Internal" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" />
      </ClassTypes>
    </EntityTypes>
    <SecureReferences>
      <SecureReference ID="Atea.Windows.File.FileCreationTimeFolder.RunasProfile" Accessibility="Public" Context="Atea.Windows.File.FileCreationTimeFolder" />
    </SecureReferences>
    <ModuleTypes>
      <DataSourceModuleType ID="Atea.Windows.File.FileCreationTime.Discovery.DataSource" Accessibility="Internal" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Health!System.Health.AlertSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="MPElement" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TargetID" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PoSHDiscovery" TypeID="Atea.Windows.File.FileCreationTime.psFolderDiscovery.ProbeAction">
                <MPElement>$Config/MPElement$</MPElement>
                <TargetID>$Config/TargetID$</TargetID>
                <ComputerName>$Config/ComputerName$</ComputerName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PoSHDiscovery">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.DS" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="TimeOutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Interval" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FolderFriendlyName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Arguments" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeOutSeconds" Selector="$Config/TimeOutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/Interval$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/Interval$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.ProbeAction">
                <Arguments>$Config/Arguments$</Arguments>
                <TimeoutSeconds>$Config/TimeOutSeconds$</TimeoutSeconds>
              </ProbeAction>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery>Property[@Name='FolderFriendlyName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value>$Config/FolderFriendlyName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="Probe">
                  <Node ID="Scheduler" />
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Atea.Windows.File.FileAgeFolder.DiscoveryDS" Accessibility="Internal" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Health!System.Health.AlertSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="MPElement" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TargetID" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Discovery.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PoSHDiscovery" TypeID="Atea.Windows.File.FileAgeFolder.DiscoveryProbe">
                <MPElement>$Config/MPElement$</MPElement>
                <TargetID>$Config/TargetID$</TargetID>
                <ComputerName>$Config/ComputerName$</ComputerName>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PoSHDiscovery">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Atea.Windows.File.FileAge.TimedPropertyBag" Accessibility="Public">
        <Configuration>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FolderFriendlyName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FileAgeAttribute" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeOutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval>$Config/IntervalSeconds$</Interval>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PropertyBag" TypeID="Atea.Windows.File.Monitoring.FileAgeProbeModule">
                <FileAgeAttribute>$Config/FileAgeAttribute$</FileAgeAttribute>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <FolderFriendlyName>$Config/FolderFriendlyName$</FolderFriendlyName>
              </ProbeAction>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery>Property[@Name='FolderFriendlyName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value>$Config/FolderFriendlyName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="PropertyBag">
                  <Node ID="Scheduler" />
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="Atea.Windows.File.FileCreationTime.psFolderDiscovery.ProbeAction" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
            <SchemaType>System!System.ParamListSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="MPElement" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TargetID" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSDiscovery" TypeID="Windows!Microsoft.Windows.PowerShellDiscoveryProbe">
                <ScriptName>AteaFileCreationTimePoSHDiscovery.ps1</ScriptName>
                <ScriptBody><![CDATA[# Begin with getting all the subkeys
# http://technet.microsoft.com/en-us/library/ff730937.aspx
# http://powershell.com/cs/blogs/tips/archive/2009/12/03/dynamically-create-script-blocks.aspx
# http://technet.microsoft.com/sv-se/library/ee176852(en-us).aspx

param([string]$sourceId,  [string]$managedEntityId, [string]$computerName)

$RegistryPath = "hklm:\Software\Atea\FileCreationTime\"
$SubKeys = Get-ChildItem $RegistryPath
$omApi = New-Object -ComObject "MOM.ScriptAPI"
#$omApi.LogScriptEvent("AteaFilCreationPoSHDiscovery.ps1", 242, 4, "Running File Creation Folder discovery with parameters $sourceId, $managedEntityId, $computerName")
$discoveryData = $omApi.CreateDiscoveryData(0, $sourceId, $managedEntityId)
ForEach ($SubKey in $SubKeys)
{
	$FriendlyName = ($SubKey.Name.Substring($SubKey.Name.LastIndexOfAny("\")+1))
	$FolderPath = $SubKey.GetValue("FolderPath")
	$Recursive = $SubKey.GetValue("Recursive")
	$FilePattern = $SubKey.GetValue("FilePattern")
	$AgeInMinutes = $SubKey.GetValue("AgeInMinutes")
	$Operator = $SubKey.GetValue("Operator")


	if (($FolderPath -ne $null) -and ($Recursive -ne $null) -and ($FilePattern -ne $null) -and ($AgeInMinutes -ne $null) -and ($Operator -ne $null))
	{
		$Operator = $Operator.Trim()

		#Add values to property bag for Discovery
		$discoveryInstance = $discoveryData.CreateClassInstance("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']$")
		$discoveryInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/FriendlyName$",$FriendlyName)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/FolderPath$",$FolderPath)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/Recursive$",$Recursive)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/FilePattern$",$FilePattern)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/AgeInMinutes$",$AgeInMinutes)
		$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileCreationTimeFolder']/Operator$",$Operator)
		$discoveryData.AddInstance($discoveryInstance)
	}
}
$discoveryData
]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>sourceId</Name>
                    <Value>$Config/MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>managedEntityId</Name>
                    <Value>$Config/TargetID$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ComputerName</Name>
                    <Value>$Config/ComputerName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSDiscovery" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
        <InputType>System!System.TriggerData</InputType>
      </ProbeActionModuleType>
      <ProbeActionModuleType ID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.ProbeAction" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Arguments" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="vbsProbe" TypeID="Windows!Microsoft.Windows.ScriptPropertyBagProbe">
                <ScriptName>FCTvbsPropertyBag.vbs</ScriptName>
                <Arguments>$Config/Arguments$</Arguments>
                <ScriptBody><![CDATA['' Recursive search for filepattern
Option Explicit
' Some much needed constants
CONST HKLM = &H80000002
CONST REG_SZ = 1
CONST REG_EXPAND_SZ = 2
CONST REG_BINARY = 3
Const REG_DWORD = 4
Const REG_MULTI_SZ = 7
Const SCOM_INFO = 2
CONST SCOM_WARNING = 1
CONST SCOM_ERROR = 0
CONST SCOM_SCRIPT_INFORMATION = 19200
CONST SCOM_SCRIPT_WARNING = 19201
CONST SCOM_SCRIPT_ERROR = 19202
CONST SCOM_DEBUG = 19999

' Declare all variables ahead, group them by "topic"
Dim fsObject, folderCollection, folderObject, fileCollection, fileObject, subFolder, folderInstance
Dim fileName, fileAge, filePath, fileCreationTime
Dim argFolder, argFilePattern, argRecursive, argFileAge, argFriendlyName, argOperator, argRegKeyPath, argComputerName 
Dim regexObject
Dim regSubKeyCollection, regSubKey, regValueCollection, regValue, regValueContent, regObject
Dim scomAPI, propertyBag, propertyBagExist

Set scomAPI = CreateObject("MOM.ScriptAPI")

argRegKeyPath = "Software\Atea\FileCreationTime"
argComputerName = WScript.Arguments(0)
'argComputerName = "."

Set regObject = GetObject("winmgmts:{impersonationLevel=impersonate}!\\" & argComputerName & "\root\default:StdRegProv")
regObject.EnumKey HKLM, argRegKeyPath, regSubKeyCollection
For each regSubKey in regSubKeyCollection
	argFriendlyName = regSubKey
	regSubKey = argRegKeyPath & "\" & regSubKey
	regObject.EnumValues HKLM, regSubKey, regValueCollection
	If Not IsNull(regValueCollection) Then
		If UBound(regValueCollection) >= 4 And Err.Number = 0 Then
			For Each regValue In regValueCollection
				regObject.GetStringValue HKLM, regSubKey, regValue, regValueContent
				Select Case regValue
					Case "FolderPath"
						argFolder = regValueContent
					Case "Recursive"
						argRecursive = regValueContent
					Case "FilePattern"
						argFilePattern = regValueContent
						argFilePattern = Replace(argFilePattern,".","\.")
						argFilePattern = Replace(argFilePattern,"?",".")
						argFilePattern = Replace(argFilePattern,"*",".*")						
					Case "AgeInMinutes"
						argFileAge = regValueContent
					Case "Operator"
						argOperator = regValueContent
				End Select
			Next
			GetFolderInfo argFolder
		End If
	End If
Next

'' Return whatever propertybags may have been created
If propertyBagExist = True Then
	scomAPI.ReturnItems
End If
Set scomAPI = Nothing
Set regObject = Nothing

'' This will find all files in the specified folderpath,
'' if it does exist, and send them to GetFileInfo()
Sub GetFolderInfo(paramFolderPath)
	If IsEmpty(fsObject) Then
		Set fsObject = CreateObject("Scripting.FileSystemObject")
	End If
	
	If fsObject.FolderExists(paramFolderPath) Then
		Set folderObject = fsObject.GetFolder(paramFolderPath)
		For Each fileObject In folderObject.Files
			GetFileInfo fileObject
		Next
		If CBool(argRecursive) = True Then
			Set folderCollection = folderObject.SubFolders
			For Each subFolder In folderCollection
				GetFolderInfo subFolder.Path
			Next
		End If
	End If
End Sub

'' GetFileInfo() will take a FSO.File object and
'' get Name, Path, CreationTime and Age (in minutes).
'' This information will be inserted into a scomAPI
'' propertybag
Sub GetFileInfo(paramFileObject)
	Dim makePropertyBag
	makePropertyBag = False
	Set regexObject = New RegExp
	regexObject.Pattern = argFilePattern
	regexObject.IgnoreCase = True
	
	If regexObject.Test(paramFileObject.Name) Then
		Select Case argOperator
			Case "<"
				If CDbl(DateDiff("n",paramFileObject.DateCreated,Now)) <= CDbl(argFileAge) Then
					WScript.Echo DateDiff("n",paramFileObject.DateCreated,Now) & argOperator & argFileAge & " case ""<"""
					makePropertyBag = True
				End If
			Case "<="
				If CDbl(DateDiff("n",paramFileObject.DateCreated,Now)) <= CDbl(argFileAge) Then
					WScript.Echo DateDiff("n",paramFileObject.DateCreated,Now) & argOperator & argFileAge & " case ""<="""
					makePropertyBag = True
				End If
			Case ">"
				If CDbl(DateDiff("n",paramFileObject.DateCreated,Now)) >= CDbl(argFileAge) Then
					WScript.Echo DateDiff("n",paramFileObject.DateCreated,Now) & argOperator & argFileAge & " case ""<"""
					makePropertyBag = True
				End If
			Case ">="
				If CDbl(DateDiff("n",paramFileObject.DateCreated,Now)) >= CDbl(argFileAge) Then
					WScript.Echo DateDiff("n",paramFileObject.DateCreated,Now) & argOperator & argFileAge & " case "">="""
					makePropertyBag = True
				End If
		End Select
		If makePropertyBag = True Then
			Set propertyBag = scomAPI.CreatePropertyBag()
			Call propertyBag.AddValue("FileName",paramFileObject.Name)
			Call propertyBag.AddValue("FileFullname",paramFileObject.Path)
			Call propertyBag.AddValue("FileCreationTime",paramFileObject.DateCreated)
			Call propertyBag.AddValue("FileSize",paramFileObject.Size)
			Call propertyBag.AddValue("FileAgeMinutes",DateDiff("n",paramFileObject.DateCreated,Now))
			Call propertyBag.AddValue("FolderFriendlyName",argFriendlyName)
			Call scomAPI.AddItem(propertyBag)
			propertyBagExist = True
			makePropertyBag = False
		End If
	End If	
End Sub


'' Simple Sub to log an event to the Operations Manager
'' event log.
Sub LogEvent(logEventID, logSeverity, logMessage)
	Dim scomApiEvent, scriptName
	scriptName = WScript.ScriptName
	
	If logEventID <> SCOM_DEBUG Then
		Set scomApiEvent = CreateObject("MOM.ScriptAPI")
		Call scomApiEvent.LogScriptEvent(scriptName,logEventID,logSeverity,logMessage)
		Set scomApiEvent = Nothing
	Else
		If debugEnabled Then
			Set scomApiEvent = CreateObject("MOM.ScriptAPI")
			Call scomApiEvent.LogScriptEvent(scriptName,logEventID,logSeverity,logMessage)
			Set scomApiEvent = Nothing
		End If
	End If
End Sub


'' This "Folder" class is mainly to group all it's related
'' functionality into one container
Class FolderClass
	Public Path
	Public FilePattern
	Public Recursive
	Public FileAgeMinutes
	Public FriendlyName
	Public Operator
	
	Private Sub Class_Initialize()
		Path = ""
		FilePattern = ""
		Recursive = ""
		FileAgeMinutes = ""
		FriendlyName = ""
		Operator = ""
	End Sub
	
	'' Receive a regkey object and look for the settings
	Public Function GetFolderSettings(paramRegKeyObject)
		Dim regValueCollection, regValue 
		paramRegKeyObject.EnumValues HKLM, paramRegKeyObject, regValueCollection
		For Each regValue In regValueCollection
			WScript.Echo regValue
		Next
		FilePattern = Replace(FilePattern,".","\.")
		FilePattern = Replace(FilePattern,"?",".")
		FilePattern = Replace(FilePattern,"*",".*")
	End Function
End Class

]]></ScriptBody>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="vbsProbe" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.TriggerData</InputType>
      </ProbeActionModuleType>
      <ProbeActionModuleType ID="Atea.Windows.File.FileAgeFolder.DiscoveryProbe" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
            <SchemaType>System!System.ParamListSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="MPElement" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TargetID" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSDiscovery" TypeID="Windows!Microsoft.Windows.PowerShellDiscoveryProbe">
                <ScriptName>FileAgePoSHDiscovery.ps1</ScriptName>
                <ScriptBody><![CDATA[# Begin with getting all the subkeys
# http://technet.microsoft.com/en-us/library/ff730937.aspx
# http://powershell.com/cs/blogs/tips/archive/2009/12/03/dynamically-create-script-blocks.aspx
# http://technet.microsoft.com/sv-se/library/ee176852(en-us).aspx

param([string]$sourceId,  [string]$managedEntityId, [string]$computerName)

$EventLogSourceName = "Atea FileAge Monitor"
$eventlogMessage = "Running FileAgeFolder discovery.`n"
$eventlogMessage += "Params:`n`tsourceId=$sourceId`n`tmanagedEntityId=$managedEntityId`n`tcomputerName=$computerName`n`n"
if (![System.Diagnostics.EventLog]::SourceExists($EventLogSourceName)) {
	New-EventLog -Source $EventLogSourceName -logname "Application"
}

$RegistryPath = "hklm:\Software\Atea\FileAgeMonitoring\"
$omApi = New-Object -ComObject "MOM.ScriptAPI"
$discoveryData = $omApi.CreateDiscoveryData(0, $sourceId, $managedEntityId)
if (Test-Path -Path $RegistryPath) {
	# Registry path is accessible
	$SubKeys = Get-ChildItem $RegistryPath
	ForEach ($SubKey in $SubKeys)
	{
		$FriendlyName = ($SubKey.Name.Substring($SubKey.Name.LastIndexOfAny("\")+1))
		$FolderPath = $SubKey.GetValue("FolderPath")
		$Recursive = $SubKey.GetValue("Recursive")
		$FilePattern = $SubKey.GetValue("FilePattern")
		$AgeInMinutes = $SubKey.GetValue("AgeInMinutes")
		$Operator = $SubKey.GetValue("Operator")
		$FileAgeAttribute = $SubKey.GetValue("FileAgeAttribute")


		if (($null -ne $FolderPath) -and ($null -ne $Recursive) -and ($null -ne $FilePattern) -and ($null -ne $AgeInMinutes) -and ($null -ne $Operator) -and ($null -ne $FileAgeAttribute))
		{
			$Operator = $Operator.Trim()

			#Add values to property bag for Discovery
			$discoveryInstance = $discoveryData.CreateClassInstance("$MPElement[Name='Atea.Windows.File.FileAgeFolder']$")
			$discoveryInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/FriendlyName$",$FriendlyName)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/FolderPath$",$FolderPath)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/Recursive$",$Recursive)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/FilePattern$",$FilePattern)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/AgeInMinutes$",$AgeInMinutes)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/Operator$",$Operator)
			$discoveryInstance.AddProperty("$MPElement[Name='Atea.Windows.File.FileAgeFolder']/FileAgeAttribute$",$FileAgeAttribute)
			$discoveryData.AddInstance($discoveryInstance)
			$eventlogMessage += "- Added $($FriendlyName) to discovery data`n"
		}
	}
}

Write-EventLog -LogName "Application" -Source $EventLogSourceName -EventID "200" -Message "" -EntryType Information -Category 0
$discoveryData
]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>sourceId</Name>
                    <Value>$Config/MPElement$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>managedEntityId</Name>
                    <Value>$Config/TargetID$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ComputerName</Name>
                    <Value>$Config/ComputerName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSDiscovery" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
        <InputType>System!System.TriggerData</InputType>
      </ProbeActionModuleType>
      <ProbeActionModuleType ID="Atea.Windows.File.Monitoring.FileAgeProbeModule" Accessibility="Internal">
        <Configuration>
          <xsd:element minOccurs="1" name="FileAgeAttribute" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FolderFriendlyName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="FileTimeAttribute" ParameterType="string" Selector="$Config/FileAgeAttribute$" />
          <OverrideableParameter ID="TimeoutSeconds" ParameterType="int" Selector="$Config/TimeoutSeconds$" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="FileAgeProbeAction" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>FileAgePB.ps1</ScriptName>
                <ScriptBody><![CDATA[# Begin with getting all the subkeys
# http://technet.microsoft.com/en-us/library/ff730937.aspx
# http://powershell.com/cs/blogs/tips/archive/2009/12/03/dynamically-create-script-blocks.aspx
# http://technet.microsoft.com/sv-se/library/ee176852(en-us).aspx
[CmdletBinding()]
Param(
	# [ValidateSet("CreationTime", "LastWriteTime", "LastAccessTime")]
	# [Parameter(Mandatory = $false)]
	# [string] $FileAgeAttribute, 
	[Parameter(Mandatory = $false)]
	[string]
	$SubKeyName
)

function Get-FileAgePropertyBags {	
	[CmdletBinding()]
	Param(
		# [ValidateSet("CreationTime", "LastWriteTime", "LastAccessTime")]
		# [Parameter(Mandatory = $true)]
		# [string] $FileAgeAttribute, 
		[Parameter(Mandatory = $true)]
		[string]
		$SubKeyName
	)

	$RegistryPath = "hklm:\Software\Atea\FileAgeMonitoring\"
	$EventLogSourceName = "Atea FileAge Monitor"
	$omApi = New-Object -ComObject "MOM.ScriptAPI"
	if (![System.Diagnostics.EventLog]::SourceExists($EventLogSourceName)) {
		New-EventLog -Source $EventLogSourceName -logname "Application"
	}

	$fsUser = '$RunAs[Name="Atea.Windows.File.FileCreationTimeFolder.RunasProfile"]/UserName$'
	$fsPass = '$RunAs[Name="Atea.Windows.File.FileCreationTimeFolder.RunasProfile"]/Password$'

	if ($fsUser -notlike '*RunAs[*') {
		$credentials = [System.Net.NetworkCredential]::new($fsUser, $fsPass)
	} else {
		$credentials = $null
	}

	if (Test-Path -Path $RegistryPath) {
		# Yes, we can read from $RegistryPath
		$SubKeys = Get-ChildItem $RegistryPath | Where-Object {$_.PSChildName -eq $SubKeyName}

		if ($null -ne $SubKeys) {
			# Found configuration keys, processing folders
			ForEach ($SubKey in $SubKeys) {
				$FriendlyName = ($SubKey.Name.Substring($SubKey.Name.LastIndexOfAny("\") + 1))
				$FolderPath = $SubKey.GetValue("FolderPath")
				$Recursive = $SubKey.GetValue("Recursive")
				$FilePattern = $SubKey.GetValue("FilePattern")
				$AgeInMinutes = $SubKey.GetValue("AgeInMinutes")
				$Operator = $SubKey.GetValue("Operator")
				$FileAgeAttribute = $SubKey.GetValue("FileAgeAttribute") # Don't know if I really need this

				if (($null -ne $FolderPath) -and ($null -ne $Recursive) -and ($null -ne $FilePattern) -and ($null -ne $AgeInMinutes) -and ($null -ne $Operator)) {
					$Operator = $Operator.Trim()

					switch ($Operator) {
						"<" {$Operator = "-lt"}
						"<=" {$Operator = "-le"}
						">" {$Operator = "-gt"}
						">=" {$Operator = "-ge"}
						default {$Operator = "-gt"}
					}

					$summaryMessage = "File Age Monitor on '$FriendlyName', looking for '$FilePattern' where $FileAgeAttribute $Operator $AgeInMinutes in $FolderPath"
					$summaryMessage += "as user: $fsUser"

					if ($Recursive.Trim() -eq "false") {
						$Recursive = ""
						$summaryMessage += "`n`n"
					}
					else {
						$Recursive = "-Recurse"
						$summaryMessage += ", Recursive`n`n"
					}

					$command = "Get-ChildItem '$FolderPath' $Recursive -Attributes !Directory | Where-Object {(`$_.Name -like '$FilePattern') -and ((((Get-Date) - `$_.$FileAgeAttribute).TotalMinutes) $Operator $AgeInMinutes)}"
					$ScriptBlock = $ExecutionContext.InvokeCommand.NewScriptBlock($command)
					if ($null -ne $credentials) {
						$Files = @(Invoke-Command -ScriptBlock $ScriptBlock -Credential $credentials) #DevSkim: ignore DS104456 
					} else {
						$Files = @(Invoke-Command -ScriptBlock $ScriptBlock) #DevSkim: ignore DS104456 
					}
					if ($Files.Count -gt 0) {
						$summaryMessage += "Found $($Files.Count) matching files:`n"
						#$summaryMessage += "File Name`tFile Path`t`tAge (minutes)`tTimeStamp`n"
						ForEach ($File in $Files) {
							$FileName = $File.Name
							$FileFullname = $File.FullName
							switch ($FileAgeAttribute) {
								"CreationTime" {$FileDateTime = $File.CreationTime}
								"LastWriteTime" {$FileDateTime = $File.LastWriteTime}
								"LastAccessTime" {$FileDateTime = $File.LastAccessTime}
							}
							$FileAgeMinutes = [math]::Round(((Get-Date) - $FileDateTime).TotalMinutes, 0)
							$summaryMessage += "$FileName`n`tMinutes since $($FileAgeAttribute): $FileAgeMinutes`n`tTimestamp: $($FileDateTime -f "o")`n`tFile Path: $FileFullName`n`n"
						}
						#We have old files, and a message. Build the property bag
						$propertyBag = $omApi.CreatePropertyBag()
						$propertyBag.AddValue("FolderFriendlyName", $FriendlyName)
						$propertyBag.AddValue("Summary", $summaryMessage)
						$propertyBag.AddValue("FileCount", $Files.Count)

						$propertyBag
						Write-EventLog -LogName "Application" -Source $EventLogSourceName -EventID "400" -Message $summaryMessage -EntryType Information -Category 0

					}
					else {
						# No matching files found
						$propertyBag = $omApi.CreatePropertyBag()
						$propertyBag.AddValue("FolderFriendlyName", $FriendlyName)
						$propertyBag.AddValue("Summary", $summaryMessage)
						$propertyBag.AddValue("FileCount", $Files.Count)

						$propertyBag
					}
				}
			}
		}
		else {
			# Registry does not contain any configured File Age Monitoring
			# or we don't have access to read the keys
			$propertyBag = $omApi.CreatePropertyBag()
			$propertyBag
		}
	}
	else {
		#Nope, not able to read from the registry path
		Write-EventLog -LogName "Application" -Source $EventLogSourceName -EventID "404" -Message "$RegistryPath is not found on this system, unable to read file age monitoring configuration.`n`nReturning an empty property bag." -EntryType Error -Category 0
		$propertyBag = $omApi.CreatePropertyBag()
		$propertyBag
	}
}

$debugHosts = @('Visual Studio Code Host')
if ($host.Name -in $debugHosts) {
	Get-FileAgePropertyBags -SubKeyName "TGDS Video"
} else {
	Get-FileAgePropertyBags -SubKeyName $SubKeyName
}]]></ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>SubKeyName</Name>
                    <Value>$Config/FolderFriendlyName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="FileAgeProbeAction" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Windows.File.FileAge.MonitorType" Accessibility="Internal" RunAs="Atea.Windows.File.FileCreationTimeFolder.RunasProfile">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy" />
          <MonitorTypeState ID="Error" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FolderFriendlyName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FileAgeAttribute" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="TimeOutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="FileAgeAttribute" Selector="$Config/FileAgeAttribute$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="TimedFileAgePropertyBag" TypeID="Atea.Windows.File.FileAge.TimedPropertyBag">
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <FolderFriendlyName>$Config/FolderFriendlyName$</FolderFriendlyName>
              <FileAgeAttribute>$Config/FileAgeAttribute$</FileAgeAttribute>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="Atea.Windows.File.Monitoring.FileAgeProbeModule">
              <FileAgeAttribute>$Config/FileAgeAttribute$</FileAgeAttribute>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <FolderFriendlyName>$Config/FolderFriendlyName$</FolderFriendlyName>
            </ProbeAction>
            <ConditionDetection ID="FilterFolder" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Property[@Name='FolderFriendlyName']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>$Config/FolderFriendlyName$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ErrorFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='FileCount']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="HealthyFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='FileCount']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyFilter">
                <Node ID="TimedFileAgePropertyBag" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Error">
              <Node ID="ErrorFilter">
                <Node ID="TimedFileAgePropertyBag" />
              </Node>
            </RegularDetection>
          </RegularDetections>
          <OnDemandDetections>
            <OnDemandDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyFilter">
                <Node ID="FilterFolder">
                  <Node ID="Probe" />
                </Node>
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="Error">
              <Node ID="ErrorFilter">
                <Node ID="FilterFolder">
                  <Node ID="Probe" />
                </Node>
              </Node>
            </OnDemandDetection>
          </OnDemandDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Atea.Windows.File.FileCreationTime.Folder.Discovery" Enabled="true" Target="Atea.Windows.File.Monitoring.Seed" ConfirmDelivery="true" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Atea.Windows.File.FileCreationTimeFolder" />
        </DiscoveryTypes>
        <DataSource ID="DiscoveryDS" TypeID="Atea.Windows.File.FileCreationTime.Discovery.DataSource">
          <MPElement>$MPElement$</MPElement>
          <TargetID>$Target/Id$</TargetID>
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <IntervalSeconds>14400</IntervalSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="Atea.Windows.File.FileAgeFolder.Discovery" Enabled="true" Target="Atea.Windows.File.Monitoring.Seed" ConfirmDelivery="true" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Atea.Windows.File.FileAgeFolder" />
        </DiscoveryTypes>
        <DataSource ID="DiscoveryDS" TypeID="Atea.Windows.File.FileAgeFolder.DiscoveryDS">
          <MPElement>$MPElement$</MPElement>
          <TargetID>$Target/Id$</TargetID>
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <IntervalSeconds>14400</IntervalSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="Atea.Windows.File.Monitoring.Seed.Discovery" Enabled="true" Target="Windows!Microsoft.Windows.Computer" ConfirmDelivery="false" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Atea.Windows.File.Monitoring.Seed" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>FCKeyExist</AttributeName>
              <Path>SOFTWARE\Atea\FileCreationTime</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>FAgeKeyExist</AttributeName>
              <Path>SOFTWARE\Atea\FileAgeMonitoring</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>14400</Frequency>
          <ClassId>$MPElement[Name="Atea.Windows.File.Monitoring.Seed"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <Or>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Values/FCKeyExist</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Values/FAgeKeyExist</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </Or>
          </Expression>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="Atea.Windows.File.FileCreationTimeFolder.AlertRule" Enabled="true" Target="Atea.Windows.File.FileCreationTimeFolder" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" RunAs="Atea.Windows.File.FileCreationTimeFolder.RunasProfile" TypeID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.DS">
            <TimeOutSeconds>300</TimeOutSeconds>
            <Interval>300</Interval>
            <FolderFriendlyName>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/FriendlyName$</FolderFriendlyName>
            <Arguments>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</Arguments>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteAlert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <Severity>1</Severity>
            <AlertMessageId>$MPElement[Name="Atea.Windows.File.FileCreationTimeFolder.AlertRule.Message"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='FileFullname']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='FileAgeMinutes']$</AlertParameter2>
              <AlertParameter3>$Data/Property[@Name='FolderFriendlyName']$</AlertParameter3>
              <AlertParameter4>$Data/Property[@Name='FileFullname']$</AlertParameter4>
              <AlertParameter5>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/FolderPath$</AlertParameter5>
              <AlertParameter6>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/Recursive$</AlertParameter6>
              <AlertParameter7>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/FilePattern$</AlertParameter7>
              <AlertParameter8>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/Operator$</AlertParameter8>
              <AlertParameter9>$Target/Property[Type="Atea.Windows.File.FileCreationTimeFolder"]/AgeInMinutes$</AlertParameter9>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data/Property[@Name='FileFullname']$</SuppressionValue>
              <SuppressionValue>$Data/Property[@Name='FolderFriendlyName']$</SuppressionValue>
            </Suppression>
          </WriteAction>
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="Atea.Windows.File.Monitoring.FileAgeMonitor" Accessibility="Public" Enabled="true" Target="Atea.Windows.File.FileAgeFolder" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows.File.FileAge.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Atea.Windows.File.Monitoring.FileAgeMonitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="FolderFriendlyName"]$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name="Summary"]$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Healthy" MonitorTypeStateID="Healthy" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <TimeoutSeconds>300</TimeoutSeconds>
          <IntervalSeconds>300</IntervalSeconds>
          <FolderFriendlyName>$Target/Property[Type="Atea.Windows.File.FileAgeFolder"]/FriendlyName$</FolderFriendlyName>
          <FileAgeAttribute>$Target/Property[Type="Atea.Windows.File.FileAgeFolder"]/FileAgeAttribute$</FileAgeAttribute>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="Atea.Windows.File.Monitoring.FileAgeMonitor.AlertMessage" />
      <StringResource ID="Atea.Windows.File.FileCreationTimeFolder.AlertRule.Message" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTime.Folder.Discovery">
          <Name>Atea File Creation-Time Folder Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder.Discovery">
          <Name>Atea FileAge Folder Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.Seed.Discovery">
          <Name>Atea File Monitoring Seed Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.FileAgeMonitor">
          <Name>File Age Monitor</Name>
          <Description>This monitor will look for files in a folder, recursively if configured so, and alert if one of more files are found.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.FileAgeMonitor.AlertMessage">
          <Name>Bad files found - {0}</Name>
          <Description>{1}
</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.FileAgeMonitor" SubElementID="Healthy">
          <Name>No Files Found</Name>
          <Description>No Files Found</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.FileAgeMonitor" SubElementID="Error">
          <Name>Bad Files Found</Name>
          <Description>Bad Files Found</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder.AlertRule">
          <Name>Atea File Creation Time Folder Alerting Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder.AlertRule.Message">
          <Name>File CreationTime alert has been triggered in {2}</Name>
          <Description>
            {0} was created {1} minutes ago in {2} which triggered this alert according to the configured query.
            Full Path to file is {3}

            Monitored folder: {4}
            Recursive check is: {5}

            Alerts will be triggered from this query:
            Filename = {6} where FileAge {7} {8} minutes
          </Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder.RunasProfile">
          <Name>Atea File Creation-Time Folder RunAs Profile</Name>
          <Description>Configures the runas account to use when access a File Creation-Time folder.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring">
          <Name>Atea Windows File Monitoring</Name>
          <Description>
            This management pack contains monitoring for various file-related scenarios. 
          More info available at https://bitbucket.org/stegenfeldt/atea.windows/wiki/Atea.Windows.File.Monitoring.mp
           </Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder">
          <Name>Atea File Age Folder</Name>
          <Description>
            A folder configured to be monitored for files and their timestamps.
          Configuration is reflected in the object properties.
          </Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="FolderPath">
          <Name>Folder Path</Name>
          <Description>Path to folder. Make sure configured account has access to it.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="Recursive">
          <Name>Recursive Check</Name>
          <Description>
            Defines whether the file lookup should be recursive or not.
          Be careful with this in large folder structures as file system searches for certain properties can be slower than expected.
          Might be better to configure multiple folder if possible.
          </Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="FilePattern">
          <Name>File Pattern</Name>
          <Description>File pattern to use when matching files.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="AgeInMinutes">
          <Name>Age in Minutes</Name>
          <Description>Defines the file age to match against using the configured operator.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="Operator">
          <Name>Operator</Name>
          <Description>Defines what operator the file checks should use.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="FriendlyName">
          <Name>Friendly Name</Name>
          <Description>Used to give the folder a more descriptive name, becomes the Display Name.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder" SubElementID="FileAgeAttribute">
          <Name>File Age Attribute</Name>
          <Description>Used to define what timestamp to look at. Valid options is CreationTime, LastWriteTime and LastAccessTime.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder">
          <Name>Atea File Creation-Time Folder</Name>
          <Description>A folder configured to be monitored for files and their creation timestamps.
          Configuration is reflected in the object properties.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="FolderPath">
          <Name>Folder Path</Name>
          <Description>Path to folder. Make sure configured account has access to it.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="Recursive">
          <Name>Recursive Check</Name>
          <Description>Defines whether the file lookup should be recursive or not.
          Be careful with this in large folder structures as file system searches for certain properties can be slower than expected.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="FilePattern">
          <Name>File Pattern</Name>
          <Description>File pattern to use when matching files.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="AgeInMinutes">
          <Name>Age in Minutes</Name>
          <Description>Defines the file age to match against using the configured operator.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="Operator">
          <Name>Operator</Name>
          <Description>Defines what operator the file checks should use.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTimeFolder" SubElementID="FriendlyName">
          <Name>Friendly Name</Name>
          <Description>Used to give the folder a more descriptive name, becomes the Display Name.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.Monitoring.Seed">
          <Name>Atea Windows File-Monitoring Seed</Name>
          <Description>Target for the other file-related class discoveries. Provides no other monitoring.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTime.Discovery.DataSource">
          <Name>Atea File Creation-Time Folder Discovery Data Source</Name>
          <Description>This datasource provides the basic discovery data for the watched folders.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.DS">
          <Name>Atea File Creation-Time Folder Property Bag Datasource</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAgeFolder.DiscoveryDS">
          <Name>Atea File Age Folder Discovery Data Source</Name>
          <Description>This datasource provides the basic discovery data for the watched folders.</Description>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileAge.TimedPropertyBag">
          <Name>Atea Windows File - File Age PropertyBag Data Source</Name>
        </DisplayString>
        <DisplayString ElementID="Atea.Windows.File.FileCreationTime.vbsPropertyBag.ProbeAction">
          <Name>Probe Action VBScript PropertyBag</Name>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>